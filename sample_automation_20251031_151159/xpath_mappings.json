{
  "repository": "https://github.com/raghava-110/Align_test.git",
  "files_analyzed": 6,
  "elements_found": 73,
  "xpath_mappings": {
    "email_input": [
      "//input[@data-bind='value: username, events: { keyup: emailKeyUp }']",
      "//input[contains(@data-bind,'value: username')]",
      "//input[@id='usernameField']",
      "//span[contains(@class,'k-widget')]//input[@id='usernameField']",
      "//span[contains(@class,'k-dropdown')]//input[@id='usernameField']",
      "//span[contains(@class,'k-combobox')]//input[@id='usernameField']",
      "//input[@name='username']",
      "//input[@type='email']"
    ],
    "continue_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "password_input": [
      "//input[@data-bind='value: password, displaynone: showClearText, events: { keyup: passwordKeyUp }']",
      "//input[contains(@data-bind,'value: password')]",
      "//input[@id='passwordField']",
      "//span[contains(@class,'k-widget')]//input[@id='passwordField']",
      "//span[contains(@class,'k-dropdown')]//input[@id='passwordField']",
      "//span[contains(@class,'k-combobox')]//input[@id='passwordField']",
      "//input[@name='password']",
      "//input[@type='password']"
    ],
    "login_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "metrics_link": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "add_metric_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "name_input": [
      "//input[@data-bind='value: companyMetric.MetricName, events: { change: onChangeMetricName }']",
      "//input[contains(@data-bind,'value: companyMetric')]",
      "//input[@type='text']",
      "//input[@placeholder='Name of the Metric']",
      "//input[contains(@placeholder,'Name of th')]",
      "//input[contains(@class,'autocomplete-off')]"
    ],
    "value_source_dropdown": [
      "//label[contains(text(),'Value Source')]/following-sibling::input",
      "//label[contains(text(),'Value Source')]/..//input",
      "//label[contains(text(),'Value Source')]/following-sibling::span//input",
      "//span[contains(@class,'k-dropdown')]//input"
    ],
    "search_metric_input": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "operator_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "save_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "dashboards_link": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "my_dashboard_link": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "edit_kpi_icon": [
      "//span[contains(@class,'icon')]",
      "//span[@title='Edit Kpi']"
    ],
    "search_input": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "custom_radio_button": [
      "//button[contains(@class,'icon')]",
      "//button[contains(@class,'icon') and contains(@class,'ico-edit-')]"
    ],
    "start_input": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "target_input": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "managecompaniesdropdownlist_input": [
      "//input[@data-bind='value: currentCompany, source: dsCompanies, events: { change: onSelectCompany, open: openManageCompanies }']",
      "//input[contains(@data-bind,'value: currentCompany')]",
      "//input[@id='manageCompaniesDropDownList']",
      "//span[contains(@class,'k-widget')]//input[@id='manageCompaniesDropDownList']",
      "//span[contains(@class,'k-dropdown')]//input[@id='manageCompaniesDropDownList']",
      "//span[contains(@class,'k-combobox')]//input[@id='manageCompaniesDropDownList']",
      "//input[contains(@class,'manage-drop')]",
      "//label[@for='manageCompaniesDropDownList']/following-sibling::input"
    ],
    "navigation_header_dropdown_input": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "metric_name_input": [
      "//input[@data-bind='value: filterCompanyMetricsKeyword, events: { change: filterCompanyMetricsByKeyword }']",
      "//input[contains(@data-bind,'value: filterCompanyMetricsKeyword')]",
      "//input[@type='text']",
      "//input[@placeholder='Metric Name']",
      "//input[contains(@placeholder,'Metric Nam')]",
      "//input[contains(@class,'input')]"
    ],
    "metric_name_label": [
      "//label[@data-bind='value: filterCompanyMetricsKeyword, events: { change: filterCompanyMetricsByKeyword }']",
      "//label[contains(@data-bind,'value: filterCompanyMetricsKeyword')]",
      "//label[@type='text']",
      "//label[@placeholder='Metric Name']",
      "//label[contains(@placeholder,'Metric Nam')]",
      "//label[contains(@class,'label')]"
    ],
    "multiuserfilter_label": [
      "//label[@data-bind='value: selectedPerson, source: dsCompanyPersons, events: { change: filterCompanyMetrics }']",
      "//label[contains(@data-bind,'value: selectedPerson')]",
      "//label[@id='multiUserFilter']",
      "//span[contains(@class,'k-widget')]//input[@id='multiUserFilter']",
      "//span[contains(@class,'k-dropdown')]//input[@id='multiUserFilter']",
      "//span[contains(@class,'k-combobox')]//input[@id='multiUserFilter']",
      "//label[@placeholder='Person']",
      "//label[contains(@class,'label')]"
    ],
    "multiteamfilter_list_item": [
      "//list_item[@data-bind='value: selectedTeams, source: dsUserTeams, events: { change: onChangeTeam }']",
      "//list_item[contains(@data-bind,'value: selectedTeams')]",
      "//list_item[@id='multiTeamFilter']",
      "//span[contains(@class,'k-widget')]//input[@id='multiTeamFilter']",
      "//span[contains(@class,'k-dropdown')]//input[@id='multiTeamFilter']",
      "//span[contains(@class,'k-combobox')]//input[@id='multiTeamFilter']",
      "//list_item[@placeholder='Team Name']",
      "//list_item[contains(@class,'label')]"
    ],
    "metricstatusfilter_input": [
      "//input[@data-bind='value: selectedStatus, source: getAllStatusValues, events: { change: filterCompanyMetrics }']",
      "//input[contains(@data-bind,'value: selectedStatus')]",
      "//input[@id='metricStatusFilter']",
      "//span[contains(@class,'k-widget')]//input[@id='metricStatusFilter']",
      "//span[contains(@class,'k-dropdown')]//input[@id='metricStatusFilter']",
      "//span[contains(@class,'k-combobox')]//input[@id='metricStatusFilter']",
      "//input[@placeholder='All Statuses']",
      "//input[contains(@placeholder,'All Status')]"
    ],
    "metricstatusfilter_label": [
      "//label[@data-bind='value: selectedStatus, source: getAllStatusValues, events: { change: filterCompanyMetrics }']",
      "//label[contains(@data-bind,'value: selectedStatus')]",
      "//label[@id='metricStatusFilter']",
      "//span[contains(@class,'k-widget')]//input[@id='metricStatusFilter']",
      "//span[contains(@class,'k-dropdown')]//input[@id='metricStatusFilter']",
      "//span[contains(@class,'k-combobox')]//input[@id='metricStatusFilter']",
      "//label[@placeholder='All Statuses']",
      "//label[contains(@placeholder,'All Status')]"
    ],
    "checkbox_input": [
      "//input[@data-bind='value: IsFilteringCompanyMetrics']",
      "//input[contains(@data-bind,'value: IsFilteringCompanyMetrics')]",
      "//input[@type='checkbox']"
    ],
    "checkbox_label": [
      "//label[@data-bind='value: IsFilteringCompanyMetrics']",
      "//label[contains(@data-bind,'value: IsFilteringCompanyMetrics')]",
      "//label[@type='checkbox']"
    ],
    "manually_updated_span": [
      "//span[@title='Manually Updated']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'ico-user')]"
    ],
    "hubspot_enabled_span": [
      "//span[@title='HubSpot Enabled']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'background')]"
    ],
    "salesforce_enabledsalesforcere_span": [
      "//span[@title='Salesforce Enabled<br />#=salesforceReportName#']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'background')]"
    ],
    "zapier_enabled_span": [
      "//span[@title='Zapier Enabled']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'background')]"
    ],
    "target_linked_span": [
      "//span[@title='Target Linked']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'ico-link')]"
    ],
    "no_owner_span": [
      "//span[@title='No Owner']",
      "//span[contains(@class,'profile-container')]",
      "//span[contains(@class,'profile-container') and contains(@class,'padding-left')]"
    ],
    "description_span": [
      "//span[@data-bind='text:MetricName']",
      "//span[@title='#: Description #']",
      "//span[contains(@class,'ellipsis-text')]"
    ],
    "formattedvalue_span": [
      "//span[@title='#=formattedValue#']",
      "//span[contains(@class,'ellipsis-text')]",
      "//span[contains(@class,'ellipsis-text') and contains(@class,'display-block')]"
    ],
    "logcountbadge_span": [
      "//span[@data-bind='text:logCount']",
      "//span[@id='logCountBadge']",
      "//span[@title='Log Count']"
    ],
    "connections_span": [
      "//span[@data-bind='text: companyMetric.SharedTarget.TargetLinkedCount']",
      "//span[@title='Connections']"
    ],
    "name_of_the_metric_input": [
      "//input[@data-bind='value: companyMetric.MetricName, events: { change: onChangeMetricName }']",
      "//input[contains(@data-bind,'value: companyMetric')]",
      "//input[@type='text']",
      "//input[@placeholder='Name of the Metric']",
      "//input[contains(@placeholder,'Name of th')]",
      "//input[contains(@class,'autocomplete-off')]"
    ],
    "enter_a_value_input": [
      "//input[@data-bind='value: companyMetric.Value, disabled: isNonEditableMetricIntegration']",
      "//input[contains(@data-bind,'value: companyMetric')]",
      "//input[@type='text']",
      "//input[@placeholder='Enter a Value']",
      "//input[contains(@placeholder,'Enter a Va')]",
      "//input[contains(@class,'padding-top')]"
    ],
    "companymetricowner_input": [
      "//input[@data-bind='value: owner, source: dsSearchPersons, events: { filtering: toggleInviteInput, select: onSelectOwner, change: onChangeOwner }']",
      "//input[contains(@data-bind,'value: owner')]",
      "//input[@id='companyMetricOwner']",
      "//span[contains(@class,'k-widget')]//input[@id='companyMetricOwner']",
      "//span[contains(@class,'k-dropdown')]//input[@id='companyMetricOwner']",
      "//span[contains(@class,'k-combobox')]//input[@id='companyMetricOwner']",
      "//input[@placeholder='Search or Invite Team Members']",
      "//input[contains(@placeholder,'Search or ')]"
    ],
    "selectedcadence_input": [
      "//input[@data-bind='value: selectedCadence, source:cadenceChoiceOptions, enabled:cadenceIsNonEditable, events: { change: clickChangeCadence }']",
      "//input[contains(@data-bind,'value: selectedCadence')]",
      "//input[contains(@class,'dropdown')]",
      "//input[contains(@class,'dropdown') and contains(@class,'padding-top')]"
    ],
    "selectedresetweekday_input": [
      "//input[@data-bind='value: selectedResetWeekDay, source:weeklyCadenceOptions, enabled:cadenceSelectionEnabled, invisible:monthlyCadenceSelected, events: { change: clickChangeResetWeekDay }']",
      "//input[contains(@data-bind,'value: selectedResetWeekDay')]",
      "//input[contains(@class,'dropdown')]",
      "//input[contains(@class,'dropdown') and contains(@class,'padding-top')]"
    ],
    "selectedresetdayofthemonth_input": [
      "//input[@data-bind='value: selectedResetDayOfTheMonth, source:monthlyCadenceOptions, enabled:cadenceSelectionEnabled, visible:monthlyCadenceSelected, events: { change: clickChangeResetDayOfTheMonth }']",
      "//input[contains(@data-bind,'value: selectedResetDayOfTheMonth')]",
      "//input[contains(@class,'dropdown')]",
      "//input[contains(@class,'dropdown') and contains(@class,'padding-top')]"
    ],
    "select_a_value_source_input": [
      "//input[@data-bind='value: selectedIntegration,source: integrationOptions, events: { open: clickValuesourceDropdown, change: clickChangeIntegration, select: disableOptions}']",
      "//input[contains(@data-bind,'value: selectedIntegration')]",
      "//input[@placeholder='Select a Value Source']",
      "//input[contains(@placeholder,'Select a V')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "selectedintegration_input": [
      "//input[@data-bind='value: selectedIntegration,enabled: isIntegrationSelectionEnabled, source: integrationOptions, events: { change: clickChangeIntegration, select: disableOptions }']",
      "//input[contains(@data-bind,'value: selectedIntegration')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "hubspot_input": [
      "//input[@data-bind='value: hubSpot.selectedMetric, source: hubSpot.dsMetrics , events: { select: hubSpot.changeMetric }']",
      "//input[contains(@data-bind,'value: hubSpot')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "hubspot_label": [
      "//label[@data-bind='text: hubSpot.parameterControlLabel.dateRange']",
      "//label[contains(@class,'label')]"
    ],
    "selectedsfreport_input": [
      "//input[@data-bind='value: selectedSFReport, source: dsSalesforceReportList, events: { change: clickChangeReport }']",
      "//input[contains(@data-bind,'value: selectedSFReport')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "selectedsfmetric_input": [
      "//input[@data-bind='value: selectedSFMetric, enabled: isMetricEnabled, source: salesforceMetricList, events: { change: clickChangeMetric }']",
      "//input[contains(@data-bind,'value: selectedSFMetric')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "name_or_owner_input": [
      "//input[@data-bind='events: { keyup: calculated.onFilterChange }']",
      "//input[@type='text']",
      "//input[@placeholder='Name or Owner']",
      "//input[contains(@placeholder,'Name or Ow')]"
    ],
    "name_list_item": [
      "//list_item[@data-bind='text:Name']",
      "//list_item[contains(@class,'icon')]",
      "//list_item[contains(@class,'icon') and contains(@class,'ico-plus-circle')]"
    ],
    "calculated_span": [
      "//span[@data-bind='events: { click: calculated.clearFormula }']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'ion-android-cancel')]"
    ],
    "validate_and_calculate_span": [
      "//span[@title='Validate and Calculate']"
    ],
    "enter_unique_identifier_input": [
      "//input[@data-bind='value: companyMetric.UniqueID, events: { change: onChangeUniqueIdentifier }']",
      "//input[contains(@data-bind,'value: companyMetric')]",
      "//input[@type='text']",
      "//input[@placeholder='Enter unique identifier']",
      "//input[contains(@placeholder,'Enter uniq')]"
    ],
    "companymetric_input": [
      "//input[@data-bind='value: companyMetric.Status, source:statusOptions']",
      "//input[contains(@data-bind,'value: companyMetric')]",
      "//input[contains(@class,'dropdown')]"
    ],
    "companymetric_label": [
      "//label[@data-bind='value: companyMetric.KPITarget.Comments']",
      "//label[contains(@data-bind,'value: companyMetric')]",
      "//label[contains(@class,'label')]"
    ],
    "companymetricid_input": [
      "//input[@data-bind='value: targetTemplateOptions,disabled: disableTargetOptions, events: { change: clickChangeTargetTemplate }']",
      "//input[contains(@data-bind,'value: targetTemplateOptions')]",
      "//input[@name='#= companyMetric.ID #']",
      "//input[@type='radio']"
    ],
    "companymetrickpiowner_input": [
      "//input[@data-bind='value: targetOwner, source: dsSearchPersons, events: { filtering: toggleInviteInput, select: onSelectTargetOwner, change: onChangeTargetOwner },enabled: IsTargetOwnerEnabled']",
      "//input[contains(@data-bind,'value: targetOwner')]",
      "//input[@id='companyMetricKPIOwner']",
      "//span[contains(@class,'k-widget')]//input[@id='companyMetricKPIOwner']",
      "//span[contains(@class,'k-dropdown')]//input[@id='companyMetricKPIOwner']",
      "//span[contains(@class,'k-combobox')]//input[@id='companyMetricKPIOwner']",
      "//input[@placeholder='Search Targets...']",
      "//input[contains(@placeholder,'Search Tar')]"
    ],
    "selectedsharedtargetname_link": [
      "//link[@data-bind='text: selectedSharedTargetName']"
    ],
    "showsharedtargettrigger_span": [
      "//span[@data-bind='click:showCopySelectedTargetModal , visible:isBrokenLinkIconVisible']",
      "//span[@id='showSharedTargetTrigger']",
      "//span[@title='Clear selected target']",
      "//span[@type='button']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'ico-link-broken')]"
    ],
    "clear_span": [
      "//span[@title='Clear']"
    ],
    "visibilitydropdown_input": [
      "//input[@data-bind='value: selectedVisibility, source: getVisibilityOptions, events: { change: clickChangeVisibility, select: disableOptions }, disabled: isTaskSecurityDisabled']",
      "//input[contains(@data-bind,'value: selectedVisibility')]",
      "//input[@id='visibilityDropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='visibilityDropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='visibilityDropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='visibilityDropdown']",
      "//input[contains(@class,'dropdown')]",
      "//label[@for='visibilityDropdown']/following-sibling::input"
    ],
    "visibilitydropdown_list_item": [
      "//list_item[@data-bind='value: selectedVisibility, source: getVisibilityOptions, events: { change: clickChangeVisibility, select: disableOptions }, disabled: isTaskSecurityDisabled']",
      "//list_item[contains(@data-bind,'value: selectedVisibility')]",
      "//list_item[@id='visibilityDropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='visibilityDropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='visibilityDropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='visibilityDropdown']",
      "//list_item[@type='text/x-kendo-template']",
      "//list_item[contains(@class,'module')]"
    ],
    "visibilitytemplatecompanymetri_label": [
      "//label[@data-bind='value: selectedIntegration,enabled: isIntegrationSelectionEnabled, source: integrationOptions, events: { change: clickChangeIntegration, select: disableOptions }']",
      "//label[contains(@data-bind,'value: selectedIntegration')]",
      "//label[@id='visibilityTemplateCompanyMetrics']",
      "//span[contains(@class,'k-widget')]//input[@id='visibilityTemplateCompanyMetrics']",
      "//span[contains(@class,'k-dropdown')]//input[@id='visibilityTemplateCompanyMetrics']",
      "//span[contains(@class,'k-combobox')]//input[@id='visibilityTemplateCompanyMetrics']",
      "//label[@type='text/x-kendo-template']",
      "//label[contains(@class,'label')]"
    ],
    "show_only_company_priorities_input": [
      "//input[@data-bind='value: showOnlyCompanyPriorities, events: { change: filterPriorities }']",
      "//input[contains(@data-bind,'value: showOnlyCompanyPriorities')]",
      "//input[@title='Show Only Company Priorities']",
      "//input[@type='checkbox']"
    ],
    "show_only_company_priorities_label": [
      "//label[@data-bind='value: showOnlyCompanyPriorities, events: { change: filterPriorities }']",
      "//label[contains(@data-bind,'value: showOnlyCompanyPriorities')]",
      "//label[@title='Show Only Company Priorities']",
      "//label[@type='checkbox']",
      "//label[contains(@class,'check-label')]"
    ],
    "member_name_list_item": [
      "//list_item[@data-bind='click: clickAddAllMembers']",
      "//list_item[@placeholder='Member Name...']",
      "//list_item[contains(@placeholder,'Member Nam')]",
      "//list_item[contains(@class,'no-margin')]",
      "//list_item[contains(@class,'no-margin') and contains(@class,'margin-bottom-less')]"
    ],
    "clickremoveselectedmember_span": [
      "//span[@data-bind='click:clickRemoveSelectedMember']",
      "//span[contains(@class,'icon')]",
      "//span[contains(@class,'icon') and contains(@class,'red')]"
    ],
    "togglearrow_span": [
      "//span[@id='toggleArrow']",
      "//span[contains(@class,'k-icon')]"
    ],
    "dropdown_link": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "custom_radio_button_under_target_link": [
      "//input[@data-bind='value: headerNavigation.selected, source: headerNavigation.headers, events: { change: headerNavigation.select }']",
      "//input[contains(@data-bind,'value: headerNavigation')]",
      "//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-widget')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-dropdown')]//input[@id='navigation-header-dropdown']",
      "//span[contains(@class,'k-combobox')]//input[@id='navigation-header-dropdown']",
      "//input[contains(@class,'header-dropdown')]",
      "//input[contains(@class,'header-dropdown') and contains(@class,'setMaxWidth')]"
    ],
    "the_dropdown": [
      "//label[contains(text(),'The')]/following-sibling::input",
      "//label[contains(text(),'The')]/..//input",
      "//label[contains(text(),'The')]/following-sibling::span//input",
      "//span[contains(@class,'k-dropdown')]//input"
    ]
  }
}