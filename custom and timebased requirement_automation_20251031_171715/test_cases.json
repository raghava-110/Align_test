{
  "test_cases": [
    {
      "id": "TC001",
      "scenario_id": "TS001",
      "name": "E2E - Create Formula Metric, Add to Dashboard, and Configure Custom Target",
      "preconditions": [
        "A valid, active user account with permissions to create metrics and edit dashboards must exist.",
        "The user is assigned to at least one company.",
        "At least two existing metrics must be available in the system to be used as operands.",
        "The application's front-end and back-end services are running and accessible."
      ],
      "test_data": {
        "email": "[User email address]",
        "password": "User password]",
        "company_name": "[Company to be selected]",
        "metric_name": "[Name of the metric to be created]",
        "value_source": "Formula",
        "format": "Number",
        "first_metric": "[Name of first metric to use in formula]",
        "operator": "+",
        "second_metric": "[Name of second metric to use in formula]",
        "target_type": "Custom",
        "custom_target_values": [
          400,
          300,
          200,
          100
        ],
        "time_based_start_value": null,
        "time_based_target_value": null
      },
      "test_steps": [
        {
          "step": 1,
          "action": "User logs in successfully and selects a company.",
          "expected_result": "The user successfully logs in and lands on the main dashboard."
        },
        {
          "step": 2,
          "action": "User navigates from the Dashboard to the Metrics page by clicking 'Metrics' in the navigation menu.",
          "expected_result": "The Metrics page loads successfully."
        },
        {
          "step": 3,
          "action": "User clicks 'Add Metric' and enters a name for the new metric.",
          "expected_result": "The metric creation form appears, and the name is entered correctly."
        },
        {
          "step": 4,
          "action": "User selects 'Formula' as the Value Source.",
          "expected_result": "The Formula Builder interface appears correctly after selecting 'Formula' as the value source."
        },
        {
          "step": 5,
          "action": "User searches for and selects the first metric for the formula.",
          "expected_result": "The first metric is successfully added to the formula display area."
        },
        {
          "step": 6,
          "action": "User selects a mathematical operator (+, -, /, *).",
          "expected_result": "The selected operator is added to the formula display area."
        },
        {
          "step": 7,
          "action": "User searches for and selects the second metric for the formula.",
          "expected_result": "The second metric is successfully added to the formula display area."
        },
        {
          "step": 8,
          "action": "User confirms the valid formula and saves the new metric by clicking the 'Save' button.",
          "expected_result": "The formula metric is created successfully with the format '(Metric) [Operator] (Metric)' and a success confirmation is shown."
        },
        {
          "step": 9,
          "action": "User navigates to 'My Dashboard'.",
          "expected_result": "The 'My Dashboard' page loads successfully."
        },
        {
          "step": 10,
          "action": "User opens the 'Edit KPI' modal to manage dashboard metrics.",
          "expected_result": "The 'Edit KPI' modal opens, displaying available metrics on the left and selected metrics on the right."
        },
        {
          "step": 11,
          "action": "User finds the newly created metric in the left panel and clicks to add it to the right panel.",
          "expected_result": "The metric is successfully moved from the left panel to the right panel."
        },
        {
          "step": 12,
          "action": "User saves the KPI configuration, and the modal closes.",
          "expected_result": "The modal closes, the dashboard refreshes, and the new metric is successfully added to the 'My KPIs' section on the dashboard."
        },
        {
          "step": 13,
          "action": "User hovers over the new metric card on the dashboard to reveal the three-dot menu.",
          "expected_result": "The three-dot menu becomes visible on the metric card."
        },
        {
          "step": 14,
          "action": "User clicks the three-dot menu and selects the 'Edit' option.",
          "expected_result": "The user can successfully navigate to the metric's Edit page."
        },
        {
          "step": 15,
          "action": "On the Edit page, user navigates to the 'Target' tab.",
          "expected_result": "The target configuration options are displayed."
        },
        {
          "step": 16,
          "action": "User selects the 'Custom' target option.",
          "expected_result": "The input fields for the 4-level custom target appear."
        },
        {
          "step": 17,
          "action": "User enters four descending values for Level 1, Level 2, Level 3, and Level 4.",
          "expected_result": "The four numeric values are entered into the respective fields without error."
        },
        {
          "step": 18,
          "action": "User clicks the 'Save' button to save the target configuration.",
          "expected_result": "The Custom target values are saved successfully."
        },
        {
          "step": 19,
          "action": "User is redirected back to the dashboard.",
          "expected_result": "The user is on the dashboard page, and the metric card on the dashboard updates to display the visual indicators for the configured Custom target."
        }
      ]
    },
    {
      "id": "TC002",
      "scenario_id": "TS002",
      "name": "E2E - Create Formula Metric, Add to Dashboard, and Configure Time-Based Target",
      "preconditions": [
        "A valid, active user account with permissions to create metrics and edit dashboards must exist.",
        "The user is assigned to at least one company.",
        "At least two existing metrics must be available in the system to be used as operands.",
        "The application's front-end and back-end services are running and accessible."
      ],
      "test_data": {
        "email": "[User email address]",
        "password": "User password]",
        "company_name": "[Company to be selected]",
        "metric_name": "[Name of the metric to be created]",
        "value_source": "Formula",
        "format": "Number",
        "first_metric": "[Name of first metric to use in formula]",
        "operator": "*",
        "second_metric": "[Name of second metric to use in formula]",
        "target_type": "Time-Based",
        "custom_target_values": null,
        "time_based_start_value": 100,
        "time_based_target_value": 500
      },
      "test_steps": [
        {
          "step": 1,
          "action": "User logs in successfully and selects a company.",
          "expected_result": "The user successfully logs in and lands on the main dashboard."
        },
        {
          "step": 2,
          "action": "User navigates to the Metrics page and initiates the creation of a new metric by clicking 'Add Metric'.",
          "expected_result": "The metric creation form appears."
        },
        {
          "step": 3,
          "action": "User provides a name and selects 'Formula' as the Value Source.",
          "expected_result": "The Formula Builder interface appears."
        },
        {
          "step": 4,
          "action": "User builds a valid formula using two existing metrics and an operator.",
          "expected_result": "A valid formula is constructed in the formula display area."
        },
        {
          "step": 5,
          "action": "User saves the new formula metric.",
          "expected_result": "The user successfully creates and saves a formula-based metric."
        },
        {
          "step": 6,
          "action": "User navigates to 'My Dashboard' and opens the 'Edit KPI' modal.",
          "expected_result": "The 'Edit KPI' modal opens successfully."
        },
        {
          "step": 7,
          "action": "User adds the newly created metric to their 'My KPIs' list and saves.",
          "expected_result": "The modal closes and the new metric appears on the 'My Dashboard' after being added via the 'Edit KPI' modal."
        },
        {
          "step": 8,
          "action": "User locates the new metric card, hovers to reveal the three-dot menu, and clicks 'Edit'.",
          "expected_result": "The user is successfully navigated to the metric's Edit page."
        },
        {
          "step": 9,
          "action": "On the Edit page, user selects the 'Target' tab.",
          "expected_result": "The target configuration options are displayed."
        },
        {
          "step": 10,
          "action": "User selects the 'Time-Based' target radio button.",
          "expected_result": "The Time-Based target configuration section appears correctly, showing 'Start' and 'Target' input fields."
        },
        {
          "step": 11,
          "action": "User enters a 'Start' value and a 'Target' value.",
          "expected_result": "The numeric values are entered into the 'Start' and 'Target' fields."
        },
        {
          "step": 12,
          "action": "User clicks the 'Save' button to confirm the target configuration.",
          "expected_result": "The Start and Target values are saved successfully without errors."
        },
        {
          "step": 13,
          "action": "User is returned to the dashboard after the save is complete.",
          "expected_result": "The user is on the dashboard page, and the metric card on the dashboard updates to display a progress indicator reflecting the configured Time-Based target."
        }
      ]
    },
    {
      "id": "TC003",
      "scenario_id": "TS003",
      "name": "Dashboard KPI Management - Add an Existing Formula Metric to Dashboard",
      "preconditions": [
        "A valid, active user account with permissions to edit dashboards must exist.",
        "The user is assigned to at least one company.",
        "A formula metric exists in the system that is not currently on the user's dashboard.",
        "The application's front-end and back-end services are running and accessible."
      ],
      "test_data": {
        "email": "[User email address]",
        "password": "User password]",
        "company_name": "[Company to be selected]",
        "metric_name": null,
        "value_source": null,
        "format": null,
        "first_metric": "[Name of first metric to use in formula]",
        "operator": null,
        "second_metric": null,
        "target_type": null,
        "custom_target_values": null,
        "time_based_start_value": null,
        "time_based_target_value": null
      },
      "test_steps": [
        {
          "step": 1,
          "action": "User logs in and selects their company, landing on the dashboard.",
          "expected_result": "The user is successfully logged in and the main dashboard is displayed."
        },
        {
          "step": 2,
          "action": "User locates the 'Edit KPI' icon/button in the 'My KPIs' section and clicks it.",
          "expected_result": "The 'Edit KPI' modal opens successfully, showing two panels for available and selected metrics."
        },
        {
          "step": 3,
          "action": "User locates the search input within the modal and enters the name of a pre-existing formula metric.",
          "expected_result": "The list of available metrics filters to show the searched metric."
        },
        {
          "step": 4,
          "action": "User finds the metric in the left panel and clicks on it.",
          "expected_result": "Clicking the metric in the left panel successfully moves it to the right panel."
        },
        {
          "step": 5,
          "action": "User clicks the 'Save' button in the modal.",
          "expected_result": "After clicking 'Save', the modal closes and the dashboard refreshes."
        },
        {
          "step": 6,
          "action": "The user scrolls to the 'My KPIs' section.",
          "expected_result": "The newly added metric card is visible and correctly displayed in the 'My KPIs' section on the dashboard."
        }
      ]
    }
  ]
}